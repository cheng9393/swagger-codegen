=begin
{{> api_info}}
=end

require 'json'

module {{moduleName}}
  class ApiError < StandardError
    attr_reader :code, :response_headers, :response_body

    # Usage examples:
    #   ApiError.new
    #   ApiError.new("message")
    #   ApiError.new(:code => 500, :response_headers => {}, :response_body => "")
    #   ApiError.new(:code => 404, :message => "Not Found")
    def initialize(arg = nil)
      if arg.is_a? Hash
        if arg.key?(:message) || arg.key?('message')
          super(arg[:message] || arg['message'])
        else
          super arg
        end

        arg.each do |k, v|
          instance_variable_set "@#{k}", v
        end
      else
        super arg
      end
    end
  end

  class ApiRuntimeError < ApiError
    attr_reader :timestamp, :status, :error, :message, :path

    def initialize(arg = nil)
      error_json = JSON.parse(arg[:response_body])
      if [:timestamp, :status, :error, :message, :path].all? {|k| error_json.key? k}
        super arg.merge(error_json)
      else
        fail 'Unexpected error response body'
      end
    end

  end
end
